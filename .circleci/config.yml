# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  pyg4ometry-win: # name of your job
    machine:
      image: win/server-2022
    steps:
        - checkout
        - run: Write-Host 'Hello, Windows

  pyg4ometry-mac:
    resource_class: medium

    macos:
      xcode: 13.4.1

    steps:
      - checkout

      - run:
          name: "Homebrew requirements"
          command: "brew install python@3.10 cmake gmp mpfr boost cgal opencascade root"

      - run:
          name: "Pip requirements"
          command: "curl -sS https://bootstrap.pypa.io/get-pip.py | python3 \\ &
                    python3 -m pip install pybind11 cython pbr"

      - run:
          name: "Install pytest"
          command: "python3 -m pip install pytest"

      - run:
          name: "Build pyg4ometry py310"
          command: "python3 setup.py bdist_wheel"

      - run:
          name: "Test pyg4ometry"
          command: "export DYLD_LIBRARY_PATH=/opt/local/lib/ &&\
                    python3 -m pip install --editable .  &&\
                    mkdir test-results &&\
                    python3 -m pytest --junitxml=test-results/junit.xml"

      - store_test_results:
          path: test-results

  pyg4ometry-linux:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    resource_class: large

    docker:
      - image: sboogert/pyg4ometry-ubuntu20
        auth:
          username: mydockerhub-user  # can specify string literal values
          password: $DOCKERHUB_PASSWORD  # or project environment variable reference
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      - run:
          name: "Install pytest"
          command: "python3.10 -m pip install pytest"

      - run:
          name: "Build pyg4ometry py310"
          command: "python3.10 setup.py bdist_wheel"

      - run:
          name: "Test pyg4ometry"
          command: "python3.10 -m pip install --editable .   &&\
                    mkdir test-results &&\
                    python3.10 -m pytest --junitxml=test-results/junit.xml"

      # many linux
      # deploy via ssh


      - store_test_results:
          path: test-results

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  pyg4ometry-build:
    jobs:
      - pyg4ometry-mac
      - pyg4ometry-linux
      #- pyg4ometry-win
